/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AgendaIndexRouteImport } from './routes/agenda/index'
import { Route as AgendaUsernameRouteImport } from './routes/agenda/$username'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AgendaIndexRoute = AgendaIndexRouteImport.update({
  id: '/agenda/',
  path: '/agenda/',
  getParentRoute: () => rootRouteImport,
} as any)
const AgendaUsernameRoute = AgendaUsernameRouteImport.update({
  id: '/agenda/$username',
  path: '/agenda/$username',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/agenda/$username': typeof AgendaUsernameRoute
  '/agenda': typeof AgendaIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/agenda/$username': typeof AgendaUsernameRoute
  '/agenda': typeof AgendaIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/agenda/$username': typeof AgendaUsernameRoute
  '/agenda/': typeof AgendaIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/agenda/$username' | '/agenda'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/agenda/$username' | '/agenda'
  id: '__root__' | '/' | '/agenda/$username' | '/agenda/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AgendaUsernameRoute: typeof AgendaUsernameRoute
  AgendaIndexRoute: typeof AgendaIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agenda/': {
      id: '/agenda/'
      path: '/agenda'
      fullPath: '/agenda'
      preLoaderRoute: typeof AgendaIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agenda/$username': {
      id: '/agenda/$username'
      path: '/agenda/$username'
      fullPath: '/agenda/$username'
      preLoaderRoute: typeof AgendaUsernameRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AgendaUsernameRoute: AgendaUsernameRoute,
  AgendaIndexRoute: AgendaIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
